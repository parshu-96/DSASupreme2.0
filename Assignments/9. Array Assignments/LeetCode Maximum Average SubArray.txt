https://leetcode.com/problems/maximum-average-subarray-i/

class Solution {
public:

    double bruteForce(vector<int>& nums, int &k) {
        int maxSum=INT_MIN;
        int i=0;
        int j=k-1;
        while(j<nums.size())
        {
            int sum=0;
            for(int y=i;y<=j;y++)
            {
                sum=sum+nums[y];
            }
            maxSum=max(sum,maxSum);
            i++;j++;
        }
        return (double)maxSum/k;
    }


    double slidingWindows(vector<int>& nums, int &k)
    {
        int i=0,j=k-1;
        int sum=0;
        for(int y=i;y<=j;y++)
        {
            sum=sum+nums[y];
        }
        int maxSum=sum;
        j++;
        while(j<nums.size())
        {
            sum-=nums[i++];
            sum+=nums[j++];
            maxSum=max(sum,maxSum);
        }
        return (double)maxSum/k;
        
    }

    double findMaxAverage(vector<int>& nums, int k) {
       return slidingWindows(nums,k);
    }
};